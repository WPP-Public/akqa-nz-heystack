<?php
namespace Heystack\Subsystem\Core\Test;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-22 at 09:46:29.
 */
class ViewableDataFormatterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ViewableDataFormatter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new \ViewableDataFormatter(new TestViewableData(array(
            'Test' => 'Hello',
            'Test2' => 'Yo'
        ), array(
            'Test' => 'Varchar',
            'Test2' => 'Varchar'
        )));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }

    /**
     * @covers ViewableDataFormatter::castingHelper
     */
    public function testCastingHelper()
    {
        $this->assertEquals('Varchar', $this->object->castingHelper('Test'));
        $this->assertEquals('Varchar', $this->object->castingHelper('Test2'));
        $this->assertEquals(false, $this->object->castingHelper('NotExistant'));
    }

    /**
     * @covers ViewableDataFormatter::__call
     */
    public function test__call()
    {
        $this->assertEquals('Hello', $this->object->Test());
        $this->assertEquals('Yo', $this->object->Test2());
        $this->assertEquals('Awesome', $this->object->TestThing());
    }

    /**
     * @covers ViewableDataFormatter::__get
     */
    public function test__get()
    {
        $this->assertEquals('Hello', $this->object->Test);
        $this->assertEquals('Yo', $this->object->Test2);
    }

    /**
     * @covers ViewableDataFormatter::__set
     */
    public function test__set()
    {
        $this->object->Something = 'Yay';
        $this->assertEquals('Yay', $this->object->Something);
    }

    /**
     * @covers ViewableDataFormatter::hasMethod
     */
    public function testHasMethod()
    {
        $this->assertTrue($this->object->hasMethod('Test'));
        $this->assertTrue($this->object->hasMethod('Test2'));
        $this->assertFalse($this->object->hasMethod('Test3'));
    }

    public function testConstructor()
    {
        $formattor = new \ViewableDataFormatter($viewableData = new TestViewableData(array(
            'Test' => 'Hello',
            'Test2' => 'Yo'
        ), array(
            'Test' => 'Varchar',
            'Test2' => 'Varchar'
        )));

        $this->assertEquals($viewableData, $formattor->getObj());

    }
}
